generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id             String         @id @default(cuid())
    name           String
    email          String         @unique
    surname        String
    idNumber       String         @unique
    dob            String
    contactNumber  String         @unique
    password       String
    ndtEmail       String         @unique
    gender         Gender         @default(Non_Binary)
    position       String
    employeeType   EmployeeType   @default(Contract)
    address        String
    city           String
    departmentId   String
    department     Department     @relation(fields: [departmentId], references: [id])
    province       String
    postalCode     String
    ethnicity      Ethnicity      @default(Black)
    role           UserRole       @default(Employee)
    startDate      DateTime
    officeLocation String
    status         UserStatus     @default(Active)
    createdAt      DateTime       @default(now())
    updatedAt      DateTime       @updatedAt
    notifications  Notification[]
    OTP            OTP[]
}

model Department {
    id      String    @id @default(cuid())
    name    String
    Project Project[]
    User    User[]
}

model Project {
    id           String     @id @default(cuid())
    name         String
    client       String
    department   Department @relation(fields: [departmentId], references: [id])
    departmentId String
    description  String
    manager      String
    projectTeam  String[]
    createdAt    DateTime   @default(now())
}

model OTP {
    id         String   @id @default(uuid())
    userId     String
    code       String
    createdAt  DateTime @default(now())
    expiryDate DateTime
    user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Notification {
    id          String               @id @default(cuid())
    caseId      String?
    taskId      String?
    recepientId String
    category    NotificationCategory
    message     String
    status      NotificationStatus   @default(New)
    createdAt   DateTime             @default(now())
    recepient   User                 @relation(fields: [recepientId], references: [id])
}

enum Ethnicity {
    Black
    White
    Coloured
    Indian
    Asian
}

enum EmployeeType {
    Contract
    Full_Time
    Part_Time
    Intern
}

enum NotificationCategory {
    Case
    Task
}

enum NotificationStatus {
    New
    Opened
}

enum UserRole {
    Admin
    Employee
    Manager
}

enum UserStatus {
    Active
    Inactive
}

enum Gender {
    Male
    Female
    Non_Binary
}
